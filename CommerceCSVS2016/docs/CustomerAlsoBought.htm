<html>
	<head>
		<title>ASP.NET Commerce Starter Kit Documentation</title>
		<link rel="stylesheet" href="style.css">
	</head>
	<body>
		<h1>"CustomerAlsoBought" Stored Procedure</h1>
		<b>Description:</b>
		<P>This is the most interesting and involved of the Customer stored 
			procedures.&nbsp; It accepts a ProductID as an input.&nbsp; First, in the inner 
			nested SELECT statement, it builds a set of all orders containing the 
			ProductID.&nbsp; Then of those records, it returns the top 5 distinct products 
			in those orders.&nbsp; This stored procedure gives the Commerce Starter Kit 
			application the "Customers who bought this item also bought" functionality.</P>
		<b>Definition:</b>
		<pre>

    
	CREATE Procedure CMRC_CustomerAlsoBought
	(
		@ProductID int
	)
	As

	/* We want to take the top 5 products contained in
		the orders where someone has purchased the given Product */
	SELECT  TOP 5 
		CMRC_OrderDetails.ProductID,
		CMRC_Products.ModelName,
		SUM(CMRC_OrderDetails.Quantity) as TotalNum

	FROM    
		CMRC_OrderDetails
	INNER JOIN CMRC_Products ON CMRC_OrderDetails.ProductID = CMRC_Products.ProductID

	WHERE   OrderID IN 
	(
		/* This inner query should retrieve all orders that have contained the productID */
		SELECT DISTINCT OrderID 
		FROM CMRC_OrderDetails
		WHERE ProductID = @ProductID
	)
	AND CMRC_OrderDetails.ProductID != @ProductID 

	GROUP BY CMRC_OrderDetails.ProductID, CMRC_Products.ModelName 

	ORDER BY TotalNum DESC
        </pre>
		<b>Database Tables Used: </b>
		<P><i>Products:</i>
		&nbsp;The Products table contains all of the information about all of the 
		products on the ASP.NET Commerce web site. Its primary key is the ProductID 
		identity field.&nbsp; Note that product descriptions are limited to 3800 
		characters.
		<p>
			<img src="1x1.gif" width="25"> <IMG src="../docs/images/products.gif">
		<P><i>OrderDetails:</i>
		&nbsp;The OrderDetails table contains detailed product information for each 
		order in the system.&nbsp; For each product in an order, an entry is made into 
		the OrderDetails table containing the ProductID, Quantity and current UnitCost 
		of the item.&nbsp; There is a many to one relationship between OrderDetails 
		table and the Orders table.&nbsp; Note the primary key in the table is both 
		OrderID and ProductID (since those two columns are the minimum required to 
		guarantee uniqueness of a record).
		<p>
			<img src="1x1.gif" width="25"> <IMG src="../docs/images/OrderDetails.gif"></p>
	</body>
</html>
